/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app/loaders/site_chat_partner_loader.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/loaders/site_chat_partner_loader.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_es6_object_assign__ = __webpack_require__("./node_modules/es6-object-assign/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_es6_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_es6_object_assign__);
/*
 Загрузчик для сторонних сайтов банка
* */

Object(__WEBPACK_IMPORTED_MODULE_0_es6_object_assign__["polyfill"])();

(function () {
  var questionsNegative = [{
    id: 1,
    text: 'Вопрос не решили'
  }, {
    id: 2,
    text: 'Долго отвечали'
  }, {
    id: 3,
    text: 'Не понравился тон'
  }, {
    id: 4,
    text: 'Ответ не понятен'
  }, {
    id: 5,
    text: 'Другое'
  }];
  var questionsPositive = [{
    id: 1,
    text: 'Решили вопрос'
  }, {
    id: 2,
    text: 'Быстро отвечали'
  }, {
    id: 3,
    text: 'Приятный тон ответов'
  }, {
    id: 4,
    text: 'Все хорошо'
  }, {
    id: 5,
    text: 'Другое'
  }];
  var chat_config = {
    applicationName: 'sberCareChat',
    yandexCounterId: 1175048,
    startForm: 'Icon',
    logError: false,
    logMetrika: true,
    mainBundlePath: '/',
    mountContainerId: 'chat-app',
    zIndex: 99999,
    theme: {
      name: 'default',
      primaryColor: '#00ac00',
      // цвет смайликов
      secondaryColor: '#404040' // цвет графических кнопок

    },
    size: {
      width: '330px',
      height: '600px'
    },
    headerIsEnabled: true,
    domain: 'sberbank.ru',
    browserName: '',
    browserVersion: '',
    chatVersion: '',
    firstMessage: {
      enable: true,
      format: 'PLAIN',
      text: 'Приветствуем вас в чате!',
      suggestions: [{
        order_id: 0,
        text: 'Что нового?'
      }, {
        order_id: 1,
        text: 'Что это такое?'
      }]
    },
    CSI_alwaysShow: false,
    CSI_new: {
      Rating: {
        title: 'Оцените чат',
        subTitle: 'от 1 (совсем плохо)\nдо 10 (прекрасно)',
        responseText: 'Оценка:'
      },
      Questions: {
        positiveMin: 7,
        positiveResponseText: 'Понравилось:',
        negativeResponseText: 'Не понравилось:'
      },
      Comments: {
        isEnabled: true,
        title: 'Похвала, предложение, замечание',
        placeholder: 'Введите комментарий',
        responseText: 'Комментарий:'
      }
    },
    CSI: {
      steps: ['Rating', 'Questions', 'Comments'],
      Rating: {
        texts: {
          title: 'Оцените обслуживание',
          subTitle: 'от 1 (совсем плохо)\nдо 10 (прекрасно)',
          buttonText: 'Оценить',
          responseText: 'Оценка:'
        }
      },
      Questions: {
        positiveMin: 7,
        texts: {
          titlePositive: 'Что вам понравилось?',
          titleNegative: 'Что пошло не так?',
          buttonText: 'Выбрать',
          positiveResponseText: 'Понравилось:',
          negativeResponseText: 'Не понравилось:'
        }
      },
      Comments: {
        texts: {
          title: 'Прокомментируйте, пожалуйста, вашу оценку',
          buttonText: 'Написать',
          responseText: 'Комментарий:'
        }
      }
    },
    CSI_points: [{
      no: 1,
      text: 'Совсем плохо',
      questions: questionsNegative
    }, {
      no: 2,
      text: '',
      questions: questionsNegative
    }, {
      no: 3,
      text: '',
      questions: questionsNegative
    }, {
      no: 4,
      text: '',
      questions: questionsNegative
    }, {
      no: 5,
      text: '',
      questions: questionsNegative
    }, {
      no: 6,
      text: '',
      questions: questionsNegative
    }, {
      no: 7,
      text: '',
      questions: questionsPositive
    }, {
      no: 8,
      text: '',
      questions: questionsPositive
    }, {
      no: 9,
      text: '',
      questions: questionsPositive
    }, {
      no: 10,
      text: 'Прекрасно',
      questions: questionsPositive
    }],
    apiRestUrl: '',
    apiWSUrl: '',
    dictionary: {
      headerTitle: 'Связь с банком',
      connectionError: 'Пожалуйста, обратитесь в контактный центр',
      botName: 'Помощник Сбербанка',
      inputPlaceholder: 'Напишите сообщение...',
      techBreakTitle: 'На данный момент отправка сообщений невозможна',
      techBreakText: 'Попробуйте зайти позже'
    },
    reconnectMaxCount: 2,
    reconnectDuration: 10,
    initTimeout: 30,
    suggestionShowTime: 60,
    techInfo: ''
  };
  window.sberCareChat = window.sberCareChat || {};

  window.sberCareChat.init = function (settings) {
    var objs = [chat_config, settings];
    var result = objs.reduce(function (r, o) {
      Object.keys(o).forEach(function (k) {
        r[k] = o[k];
      });
      return r;
    }, {});
    chat_config = result;
    initChat();
  };

  function loadJS(url, callback) {
    var scriptTag = document.createElement('script');
    scriptTag.src = url;
    scriptTag.addEventListener('load', callback);
    document.body.appendChild(scriptTag);
  }

  function initChat() {
    setTimeout(function () {
      loadJS("".concat(chat_config.mainBundlePath, "main_bundle_chat.min.js?v=1582617256239"), function () {
        if (window.sbt_newchat) {
          window.sbt_newchat.init(chat_config);
        }
      });
    }, 50);
  }
})(window);

/***/ }),

/***/ "./node_modules/es6-object-assign/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Code refactored from Mozilla Developer Network:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
 */



function assign(target, firstSource) {
  if (target === undefined || target === null) {
    throw new TypeError('Cannot convert first argument to object');
  }

  var to = Object(target);
  for (var i = 1; i < arguments.length; i++) {
    var nextSource = arguments[i];
    if (nextSource === undefined || nextSource === null) {
      continue;
    }

    var keysArray = Object.keys(Object(nextSource));
    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {
      var nextKey = keysArray[nextIndex];
      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
      if (desc !== undefined && desc.enumerable) {
        to[nextKey] = nextSource[nextKey];
      }
    }
  }
  return to;
}

function polyfill() {
  if (!Object.assign) {
    Object.defineProperty(Object, 'assign', {
      enumerable: false,
      configurable: true,
      writable: true,
      value: assign
    });
  }
}

module.exports = {
  assign: assign,
  polyfill: polyfill
};


/***/ })

/******/ });